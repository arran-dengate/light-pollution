
This is how the kernel looks...

[[ 0.0011  0.0014  0.0018  0.0021  0.0022  0.0021  0.0018  0.0014  0.0011]
 [ 0.0014  0.002   0.0027  0.0036  0.004   0.0036  0.0027  0.002   0.0014]
 [ 0.0018  0.0027  0.0045  0.0071  0.0089  0.0071  0.0045  0.0027  0.0018]
 [ 0.0021  0.0036  0.0071  0.0179  0.0357  0.0179  0.0071  0.0036  0.0021]
 [ 0.0022  0.004   0.0089  0.0357  1.      0.0357  0.0089  0.004   0.0022]
 [ 0.0021  0.0036  0.0071  0.0179  0.0357  0.0179  0.0071  0.0036  0.0021]
 [ 0.0018  0.0027  0.0045  0.0071  0.0089  0.0071  0.0045  0.0027  0.0018]
 [ 0.0014  0.002   0.0027  0.0036  0.004   0.0036  0.0027  0.002   0.0014]
 [ 0.0011  0.0014  0.0018  0.0021  0.0022  0.0021  0.0018  0.0014  0.0011]]

I'm scaling everything down in the kernel by a shit-ton to avoid overexposing the image.
But that was just a stop-gap measure while testing - I should be scaling it 
at the end instead, just before exporting. I think that'll make a drastic change in the effect(?)

This is how a sample matrix looks before convolve:

[[  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.  30.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]]

After:

[[  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   2.   2.   2.   2.   2.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   2.   2.   2.   2.   2.   2.   2.   1.   1.   1.]
 [  1.   1.   1.   2.   2.   2.   2.   2.   2.   2.   2.   2.   1.   1.]
 [  1.   1.   1.   2.   2.   2.   2.   2.   2.   2.   2.   2.   1.   1.]
 [  1.   1.   1.   2.   2.   2.   2.  30.   2.   2.   2.   2.   1.   1.]
 [  1.   1.   1.   2.   2.   2.   2.   2.   2.   2.   2.   2.   1.   1.]
 [  1.   1.   1.   2.   2.   2.   2.   2.   2.   2.   2.   2.   1.   1.]
 [  1.   1.   1.   1.   2.   2.   2.   2.   2.   2.   2.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   2.   2.   2.   2.   2.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]
 [  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]]

So yeah. Clearly not even close to mathematically right yet.



